@using MyMeetup.Web.ViewComponents
@using MyMeetUp.Logic.Models
@model MyMeetup.Web.Areas.Admin.Models.UserDetailsModel

@{
    ViewData["Title"] = "Détail utilisateur";
}

@await Component.InvokeAsync(typeof(MyMeetup.Web.ViewComponents.UserViewComponent), new { userId = Model.Id, Referrer = Model.Referrer })

<div class="card w-100">
    <div class="card-header primary-color white-text">
        Rencontres effectuèes
    </div>

    <div class="card-body">
        <h3 class="card-title">Rencontres <small>(@Model.Meetups.Count)</small></h3>
        <table class="table table-striped table-bordered" cellspacing="0" id="dtMeetups">
            <thead>
                @*<th class="th-sm">

                    </th>*@
            <th class="th-sm">
                Rencontre

            </th>
            <th class="th-sm">
                Code de pré-inscription

            </th>
            <th class="th-sm">
                Enregistré le

            </th>

            </thead>
            <tbody>
                @foreach (RegisteredMeetupModel meetup in Model.Meetups)
                {
                    <tr>

                        @*  <td><a href="/admin/User/Details?userId=@user.Id"><i class="fa fa-edit" aria-hidden="true"></i></a></td>*@
                        <td>@meetup.MeetupTitle</td>

                        <td>@meetup.RegistrationCode</td>

                        <td data-order="@meetup.RegisteredOnSort">@meetup.RegisteredOn.ToString("dd/MM/yyyy hh:mm")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    function validateForm(id) {

        document.getElementById('frmUser').submit();
    }
</script>
@section scripts
{

    <script type="text/javascript" src="~/lib/datatables/datatables.min.js"></script>
<script>
    $(function() {
        var table = $("#dtMeetups").DataTable({
        "paging": false,
    "columnDefs": [
         //   {"targets": 0, "width": "20px", "searchable": false,"orderable":false }
],
"language":
    {
        "sProcessing":
    "Traitement en cours...",
        "sSearch":
    "Rechercher&nbsp;:",
        "sLengthMenu":
    "Afficher _MENU_ &eacute;l&eacute;ments",
        "sInfo":
    "Affichage de l'&eacute;l&eacute;ment _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments",
        "sInfoEmpty":
    "Affichage de l'&eacute;l&eacute;ment 0 &agrave; 0 sur 0 &eacute;l&eacute;ment",
        "sInfoFiltered":
    "(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)",
        "sInfoPostFix":
    "",
        "sLoadingRecords":
    "Chargement en cours...",
        "sZeroRecords":
    "Aucun &eacute;l&eacute;ment &agrave; afficher",
        "sEmptyTable":
    "Aucune donn&eacute;e disponible dans le tableau",
        "oPaginate":
        {
        "sFirst":
    "Premier",
        "sPrevious":
    "Pr&eacute;c&eacute;dent",
        "sNext":
    "Suivant",
        "sLast":
    "Dernier"
},
"oAria":
        {
        "sSortAscending":
    ": activer pour trier la colonne par ordre croissant",
        "sSortDescending":
    ": activer pour trier la colonne par ordre d&eacute;croissant"
},
"select":
        {
        "rows":
    {
        "_":
    "%d lignes séléctionnées",
        "0":
    "Aucune ligne séléctionnée",
        "1":
    "1 ligne séléctionnée"
}
}
}
});


</script>
}